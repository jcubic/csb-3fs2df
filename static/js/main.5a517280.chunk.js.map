{"version":3,"sources":["components/Heading.js","components/SongListItem.js","components/Slider.js","components/SongPlayer.js","components/Songs.js","components/hooks.js","components/App.js","index.js"],"names":["Heading","title","SongListItem","song","isCurrent","onSelect","className","onClick","artist","Slider","vertical","props","cls","push","join","type","calculateTime","secs","minutes","Math","floor","seconds","returnedSeconds","SongPlayer","showControls","isPlaying","onPause","onPlay","onEnded","onNext","onPrevious","audioUrl","coverUrl","audioRef","useRef","useState","duration","setDuration","progress","setProgress","volume","setVolume","useEffect","localStorage","getItem","current","width","height","src","alt","ref","autoPlay","onTimeUpdate","currentTime","onLoadedMetadata","controls","onInput","e","target","value","max","min","icon","faBackwardStep","pause","play","faPause","faPlay","faForwardStep","setItem","Songs","children","SYSEND_EVENT","App","URL","songs","setSongs","currentSongIndex","setCurrentSongIndex","fetch","then","response","ok","json","handler","songIndex","sysend","on","off","broadcast","currentSong","selectSong","selectedSong","audioIndex","findIndex","nextSong","length","previewsSong","useRemoteSongs","setIsPlaying","map","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.5a517280.chunk.js","sourcesContent":["import \"./Heading.css\";\nexport function Heading({ title }) {\n  return <h1>{title}</h1>;\n}\n","import \"./SongListItem.css\";\nexport function SongListItem({ song, isCurrent, onSelect }) {\n  return (\n    <li\n      className={`SongListItem ${isCurrent ? \"selected\" : \"\"}`}\n      onClick={() => onSelect(song)}\n    >\n      {song.title} by {song.artist}\n    </li>\n  );\n}\n","import \"./Slider.css\";\n\nexport const Slider = ({ className, vertical = false, ...props }) => {\n  let cls = [\"slider\"];\n  if (className) {\n    cls.push(className);\n  }\n  if (vertical) {\n    cls.push(\"vertical\");\n  }\n\n  return (\n    <div className={cls.join(\" \")}>\n      <input type=\"range\" {...props} />\n    </div>\n  );\n};\n","import { useEffect, useRef, useState } from \"react\";\nimport { Heading } from \"./Heading\";\nimport { Slider } from \"./Slider\";\nimport \"./SongPlayer.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faPause,\n  faForwardStep,\n  faBackwardStep\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst calculateTime = (secs) => {\n  const minutes = Math.floor(secs / 60);\n  const seconds = Math.floor(secs % 60);\n  const returnedSeconds = seconds < 10 ? `0${seconds}` : `${seconds}`;\n  return `${minutes}:${returnedSeconds}`;\n};\n\nexport function SongPlayer({\n  showControls = false,\n  isPlaying,\n  onPause,\n  onPlay,\n  onEnded,\n  onNext,\n  onPrevious,\n  song: { audioUrl, coverUrl }\n}) {\n  const audioRef = useRef();\n  const [duration, setDuration] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [volume, setVolume] = useState(100);\n\n  useEffect(() => {\n    const volume = localStorage.getItem(\"__player_volume\");\n    if (volume) {\n      setVolume(+volume);\n    }\n  }, []);\n\n  useEffect(() => {\n    audioRef.current.volume = volume / 100;\n  }, [volume, audioUrl]);\n\n  const inputHandler = (e) => {\n    const progress = +e.target.value;\n    setProgress(progress);\n    audioRef.current.currentTime = progress;\n  };\n\n  const loadedMetadata = () => {\n    setDuration(audioRef.current.duration);\n  };\n\n  const playPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      onPause();\n    } else {\n      audioRef.current.play();\n      onPlay();\n    }\n  };\n\n  const onVolumeChange = (e) => {\n    const volume = +e.target.value;\n    localStorage.setItem(\"__player_volume\", volume);\n    setVolume(volume);\n  };\n\n  return (\n    <section className=\"SongPlayer\">\n      <Heading title=\"Music Player\" />\n      <img width=\"250\" height=\"250\" src={coverUrl} alt=\"Song cover\" />\n      <audio\n        ref={audioRef}\n        key={audioUrl}\n        autoPlay={isPlaying}\n        onEnded={onEnded}\n        onTimeUpdate={() => setProgress(audioRef.current.currentTime)}\n        onLoadedMetadata={loadedMetadata}\n        controls={showControls}\n      >\n        <source src={audioUrl} />\n      </audio>\n      {calculateTime(progress)} / {calculateTime(duration)}\n      <Slider\n        className=\"progress\"\n        onInput={inputHandler}\n        max={duration}\n        min=\"0\"\n        value={progress}\n      />\n      <nav>\n        <button onClick={onPrevious}>\n          <FontAwesomeIcon icon={faBackwardStep} />\n        </button>\n        <button onClick={playPause}>\n          <FontAwesomeIcon icon={isPlaying ? faPause : faPlay} />\n        </button>\n        <button onClick={onNext}>\n          <FontAwesomeIcon icon={faForwardStep} />\n        </button>\n        <div className=\"volume\">\n          <Slider\n            vertical\n            min=\"0\"\n            max=\"100\"\n            onInput={onVolumeChange}\n            value={volume}\n          />\n        </div>\n      </nav>\n    </section>\n  );\n}\n","import \"./Songs.css\";\nexport function Songs({ children }) {\n  return <section className=\"Songs\">{children}</section>;\n}\n","import { useEffect, useState } from \"react\";\n\n// TODO: broken library - addEventListenr('load') called\n//       after event was fired, can't debug in dev tools\nimport sysend from \"sysend\";\n\nconst SYSEND_EVENT = \"song\";\n\nexport const useRemoteSongs = (URL) => {\n  const [songs, setSongs] = useState([]);\n  const [currentSongIndex, setCurrentSongIndex] = useState(0);\n  useEffect(() => {\n    fetch(URL).then((response) => {\n      if (response.ok) {\n        response.json().then(setSongs);\n      }\n    });\n  }, [URL]);\n\n  useEffect(() => {\n    const handler = (songIndex) => {\n      setCurrentSongIndex(songIndex);\n    };\n    sysend.on(SYSEND_EVENT, handler);\n    return () => {\n      sysend.off(SYSEND_EVENT, handler);\n    };\n  }, []);\n\n  useEffect(() => {\n    sysend.broadcast(SYSEND_EVENT, currentSongIndex);\n  }, [currentSongIndex]);\n\n  const currentSong = songs[currentSongIndex];\n\n  const selectSong = (selectedSong) => {\n    const audioIndex = songs.findIndex(\n      (song) => song.audioUrl === selectedSong.audioUrl\n    );\n    if (audioIndex >= 0) {\n      setCurrentSongIndex(audioIndex);\n    }\n  };\n\n  const nextSong = () => {\n    if (currentSongIndex === songs.length - 1) {\n      setCurrentSongIndex(0);\n    } else {\n      setCurrentSongIndex(currentSongIndex + 1);\n    }\n  };\n\n  const previewsSong = () => {\n    if (currentSongIndex === 0) {\n      setCurrentSongIndex(songs.length - 1);\n    } else {\n      setCurrentSongIndex(currentSongIndex - 1);\n    }\n  };\n\n  return { songs, currentSong, selectSong, nextSong, previewsSong };\n};\n","import { useState } from \"react\";\nimport { Heading } from \"./Heading\";\nimport { SongListItem } from \"./SongListItem\";\nimport { SongPlayer } from \"./SongPlayer\";\nimport { Songs } from \"./Songs\";\nimport \"./App.css\";\nimport { useRemoteSongs } from \"./hooks\";\n\nexport function App() {\n  const URL = \"https://music.jcubic.pl/api/songs.json\";\n  const {\n    songs,\n    currentSong,\n    selectSong,\n    previewsSong,\n    nextSong\n  } = useRemoteSongs(URL);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {songs.length === 0 ? (\n        \"Loading...\"\n      ) : (\n        <>\n          <SongPlayer\n            song={currentSong}\n            isPlaying={isPlaying}\n            onEnded={nextSong}\n            onPause={() => setIsPlaying(false)}\n            onPlay={() => setIsPlaying(true)}\n            onNext={nextSong}\n            onPrevious={previewsSong}\n          />\n          <Songs>\n            <Heading title=\"Songs\" />\n            <ul>\n              {songs.map((song) => (\n                <SongListItem\n                  key={song.audioUrl}\n                  song={song}\n                  isCurrent={currentSong.audioUrl === song.audioUrl}\n                  onSelect={selectSong}\n                />\n              ))}\n            </ul>\n          </Songs>\n        </>\n      )}\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./components/App\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}